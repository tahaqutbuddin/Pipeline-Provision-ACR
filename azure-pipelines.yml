trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  acrLoginServer: ''

stages:
- stage: Infrastructure Provisioning
  displayName: "Provision ACR, Resource group on Azure"
  jobs:
    - job: Provision
      displayName: Validate and provision
      pool:
        vmImage: ubuntu-latest
      steps:
      - task: TerraformInstaller@1
        inputs:
          terraformVersion: 'latest'
      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: $(azure-connection)
          backendAzureRmResourceGroupName: $(storage-resource-group)
          backendAzureRmStorageAccountName: $(storage-account)
          backendAzureRmContainerName: $(storage-container)
          backendAzureRmKey: $(storage-key)
      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'plan'
          environmentServiceNameAzureRM: $(azure-connection)
      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'apply'
          commandOptions: '--auto-approve'
          environmentServiceNameAzureRM: $(azure-connection)
      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'output'
          environmentServiceNameAzureRM: $(azure-connection)

- stage: Deploy
  displayName: Build Docker image and publish stage
  jobs:
  - job: Build
    displayName: Build job
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DockerInstaller@0
      inputs:
        dockerVersion: '17.09.0-ce'
    - task: Docker@2
      displayName: Build and publish image to Azure Container Registry
      inputs:
        command: buildAndPush
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        tags: |
          $(tag)

# steps:
# - task: TerraformInstaller@1
#   inputs:
#     terraformVersion: 'latest'
# - task: TerraformTaskV4@4
#   inputs:
#     provider: 'azurerm'
#     command: 'init'
#     backendServiceArm: $(azure-connection)
#     backendAzureRmResourceGroupName: $(storage-resource-group)
#     backendAzureRmStorageAccountName: $(storage-account)
#     backendAzureRmContainerName: $(storage-container)
#     backendAzureRmKey: $(storage-key)
# - task: TerraformTaskV4@4
#   inputs:
#     provider: 'azurerm'
#     command: 'plan'
#     environmentServiceNameAzureRM: $(azure-connection)
# - task: TerraformTaskV4@4
#   inputs:
#     provider: 'azurerm'
#     command: 'apply'
#     commandOptions: '--auto-approve'
#     environmentServiceNameAzureRM: $(azure-connection)



